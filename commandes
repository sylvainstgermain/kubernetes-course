ok: [master-2]
ok: [master-1]
ok: [master-3]
ok: [node-1]
ok: [node-2]
ok: [node-3]

------------------------------------------
Kubectl
------------------------------------------
# GET
kubectl get
kubectl get pods -n kube-system
kubectl get pods -n kube-system -o wide  # very useful
kubectl get services --sort-by=.metadata.name

kubectl get services --sort-by=.spec.containers[0].ports[0].protocol
kubectl get pods --sort-by=


# DESCRIBE
kubectl describe


--------------------------------------------
NODES
--------------------------------------------
kubectl get nodes
fping -A master-1 master-2 master-3 node-1 node-2 node-3
kubectl describe nodes

-------------------------------------------
PODS
-------------------------------------------
PODS to the kubernetes system
kubectl get pods -n kube-system
student@bchd:~$ kubectl get pods -n kube-system
NAME                                       READY   STATUS    RESTARTS   AGE
calico-kube-controllers-7798c85854-kh79p   1/1     Running   0          81m
calico-node-77bj4                          1/1     Running   0          81m
calico-node-xdjhf                          1/1     Running   0          81m
calico-node-z6lbl                          1/1     Running   0          81m
coredns-5d65dd49c8-859m2                   1/1     Running   0          81m
coredns-5d65dd49c8-fz798                   1/1     Running   0          81m

kubectl get pods
kubectl get pods -n default
kubectl get pods -n kube-system
kubectl apply -f my_first_pod.yaml
kubectl describe pod myfirstpod
kubectl create -f object.yml
kubectl create -f https://static.alta3.com/projects/k8s/nginx-pod.yaml
kubectl delete 
kubeclt apply  # never better recreate 
kubectl edit myfirstpod
kubectl delete pods --all

#shell
                 
# Fonctionne seulement s'il y a un container dans le pod nginx
kubectl exec -it nginx date

kubectl exec -it nginx -- sh

# pods par nombre de restart
kubectl get pods --all-namespaces --sort-by='.status.containerStatuses[0].restartCount'

-- copy
kubectl cp /pathtofile pod-name:/pathfile
kubectl cp pod-name:/pathfile /pattofile

# specifier le container webby 
kubectl cp /pathtofile pod-name:/pathfile -c webby

# assign/create label
kubectl label pods nginx app=web_service

# get version all pod of label app
kubectl get pods -L app

#Perform the following get command to get the running pod's manifest.

# debug
kubectl describe pod <POD NAME>

-------------------------------------------
NAMESPACES
-------------------------------------------
kubectl get ns 
kubectl get namespaces
kubectl get pods --all-namespaces

default           Active   95m #
kube-node-lease   Active   95m # not use
kube-public       Active   95m # Git HUB
kube-system       Active   95m # Admin


kubectl create ns prod
kubectl create namespaces prod

kubectl create ns dev

kubectl create -f test-ns.yaml
kubectl get namespaces
kubectl describe namespace test
kubectl create -f test-rq.yaml --namespace=test
kubectl describe namespace test
kubectl get namespaces

-----------------------------------------
CONTEXT
-----------------------------------------

kubectl config view

apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: DATA+OMITTED
    server: https://127.0.0.1:6443
  name: kubernetes-the-alta3-way
contexts:
- context:
    cluster: kubernetes-the-alta3-way
    user: admin
  name: kubernetes-the-alta3-way
current-context: kubernetes-the-alta3-way
kind: Config
preferences: {}
users: 
- name: admin
  user:
    client-certificate: /home/student/k8s-certs/admin.pem
    client-key: /home/student/k8s-certs/admin-key.pem

kubectl config view
kubectl config set-context kubernetes-the-alta3-way --namespace=dev
kubectl config view
kubectl config set-context kubernetes-the-alta3-way --namespace=default
kubectl config use-context dev

cd ~
kubectl config set-context dev-context --namespace=dev
kubectl config use-context dev-context
kubectl config view --minify
kubectl config set-context dev-context --namespace=dev --user=admin --cluster=kubernetes-the-alta3-way
kubectl config view

kubectl config get-contexts

kubectl config set-context kubernetes-the-alta3-way --namespace=default

kubectl config set-context prod-context --namespace=prod --user=admin --cluster=kubernetes-the-alta3-way
kubectl config set-context test-context --namespace=test --user=admin --cluster=kubernetes-the-alta3-way

kubectl config get-contexts

kubectl config view

kubectl config use-context kubernetes-the-alta3-way

CURRENT   NAME                       CLUSTER                    AUTHINFO   NAMESPACE
          dev-context                kubernetes-the-alta3-way   admin      dev
*         kubernetes-the-alta3-way   kubernetes-the-alta3-way   admin      default
          prod-context               kubernetes-the-alta3-way   admin      prod
          test-context               kubernetes-the-alta3-way   admin      test

kubectl config get-contexts

kubectl config use-context dev-context
kubectl config use-context prod-context
kubectl config use-context test-context
kubectl config use-context kubernetes-the-alta3-way


------------------------------------------
Docker
------------------------------------------
sudo docker image ls
sudo docker ps -a
sudo docker run -p 2224:8888 -it webby
sudo docker ps -a
sudo docker images
docker --version
sudo docker run -d -p 2345:5000 registry:2
sudo docker tag webby bchd.registry/stgermains-webby
sudo docker push bchd.registry/stgermains-webby
sudo docker build -t welcome -f scratch .
sudo docker run -it welcome
