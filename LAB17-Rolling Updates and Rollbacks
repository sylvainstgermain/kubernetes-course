Read more about Kubernetes updates here:
https://kubernetes.io/docs/concepts/cluster-administration/manage-deployment/#in-place-updates-of-resources

This lab uses annotation to keep rollouts organized. Read more about annotations here: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/

watch -n 2 'kubectl get pods'

wget https://static.alta3.com/projects/k8s/zombie.yaml
cat objets-cours/zombie.yam
https://kubernetes.io/docs/concepts/workloads/controllers/deployment/

kubectl apply -f objets-cours/zombie.yaml

kubectl get deployments
NAME     READY   UP-TO-DATE   AVAILABLE   AGE
zombie   3/3     3            3           10s

Why are there three zombie-yyyyyyyyyy-zzzzz pods?
Because a Deployment is made up of 1 or more pods. In this case replicas=3, so three idential pods are being deployed
Is there any reason zombie-yyyyyyyyyy-zzzzz is named the way it is?
*YES! All pods within a deployment are given this "double-hyphen" notation. Anytime you observe two-hyphens within a pod name, you can assume it is part of a deployment.

#ake a look at the rollout history. You should only see one.
kubectl rollout history deploy zombie

deployment.apps/zombie 
REVISION  CHANGE-CAUSE
1         <none>

Set an annotation on the CHANGE-CAUSE field.
kubectl annotate deployment zombie kubernetes.io/change-cause="deployed ver. 1.18.0"

kubectl rollout history deploy zombie
deployment.apps/zombie 
REVISION  CHANGE-CAUSE
1         deployed ver. 1.18.0

Take a look inside one of your zombie pods to check the deployed version.
kubectl exec -it zombie-75ddd4d4b4-9r4nv -- bash
nginx -v
nginx version: nginx/1.18.0

Exit the container
exit

Edit the zombie deployment file:
NGINX version from 1.18.0 into 1.19.6.

kubectl apply -f objets-cours/zombie.yaml

kubectl rollout history deploy zombie
deployment.apps/zombie 
REVISION  CHANGE-CAUSE
1         deployed ver. 1.18.0
2         deployed ver. 1.18.0

Manually set an annotation on the CHANGE-CAUSE field. NOTE: Setting this annotation could be part of an automated process
kubectl annotate deployment zombie kubernetes.io/change-cause="ver. 1.19.6"

kubectl rollout history deploy zombie
deployment.apps/zombie 
REVISION  CHANGE-CAUSE
1         deployed ver. 1.18.0
2         ver. 1.19.6

Check in the container
kubectl exec -it zombie-dc59bf87c-4hl5t -- bash
nginx -v
ginx version: nginx/1.19.6
root@zombie-dc59bf87c-4hl5t:/# 

edit the zombie deployment file:
latest version

Now apply that change and see what the below pane shows 
as your rollout is taking effect. This time we'll include 
the --record flag which should auto update our CHANGE-CAUSE field.

kubectl apply -f objets-cours/zombie.yaml --record

kubectl rollout history deploy zombie
deployment.apps/zombie
REVISION  CHANGE-CAUSE
1         deployed ver. 1.18.0
2         ver. 1.19.6
3         kubectl apply --filename=zombie.yaml --record=true

kubectl annotate deployment zombie kubernetes.io/change-cause="deployed latest stable release"

kubectl rollout history deploy zombie
deployment.apps/zombie 
REVISION  CHANGE-CAUSE
1         deployed ver. 1.18.0
2         ver. 1.19.6
3         deployed latest stable release

----------------------
ROLLBACKS
----------------------
# get info on rollback 1
kubectl rollout history deploy zombie --revision=1

kubectl rollout history deploy zombie --revision=2

#Check the status of the rollouts.
kubectl rollout status deploy zombie
deployment "zombie" successfully rolled out

#Now attempt to undo a rollout via a rollback. The 'undo' command undoes the most recent update.
kubectl rollout undo deploy/zombie

kubectl rollout status deploy zombie
deployment "zombie" successfully rolled out

kubectl get pods

# check pods
kubectl exec -it zombie-dc59bf87c-2mbbj -- bash
nginx -v
nginx version: nginx/1.19.6

kubectl rollout status deploy zombie

Kubernetes always increases the REVISION value, but notice that the CHANGE-CAUSE was 'moved' to this new revision! Cool! Taking a little extra time to organize ourselves is REALLY paying off!!
kubectl rollout history deploy zombie
deployment.apps/zombie 
REVISION  CHANGE-CAUSE
1         deployed ver. 1.18.0
3         deployed latest stable release
4         ver. 1.19.6

CHALLENGE 01 (OPTIONAL) - To rollback to a specific revision on "zombie", you would issue kubectl rollout undo deploy/zombie --to-revision=n, where 'n' is the revision you wish to select. Try to rollback to the oldest revision listed available to you.
kubectl rollout undo deploy/zombie --to-revision=1

kubectl rollout history deploy zombie
deployment.apps/zombie 
REVISION  CHANGE-CAUSE
3         deployed latest stable release
4         ver. 1.19.6
5         deployed ver. 1.18.0

# delete deployment
kubectl delete deploy zombie
































