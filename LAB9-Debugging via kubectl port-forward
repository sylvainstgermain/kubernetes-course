kubectl config get-contexts

CURRENT   NAME                       CLUSTER                    AUTHINFO   NAMESPACE
          dev-context                kubernetes-the-alta3-way   admin      dev
*         kubernetes-the-alta3-way   kubernetes-the-alta3-way   admin      default
          prod-context               kubernetes-the-alta3-way   admin      prod
          test-context               kubernetes-the-alta3-way   admin      test

kubectl config use-context kubernetes-the-alta3-way           

http://yaml.org/spec/1.2/spec.html

kubectl api-resources

apiVersion:
kind:
metadata:
spec:

apiVersion: is a required key field. It defines the Kubernetes API you are using.
kind: For this lab, the value field will be either Pod or Deployment.
metadata: A required key that helps uniquely identify the object. Subkeys are name, uid, labels, and namespace.
spec: Specifies the desired state of an object. If a spec is deleted, the object will be purged from the system.
status: PURELY FYI - A system generated value that shows the actual state of the object at the current time.


Focus on that key kind:. The kind: key describes the object you want 
kubernetes to create. Curious what the entire list of objects is?
 Issue the following command. The far right column reflects the 
 'value' you could place to the right of the key kind: within your manifest.

kubectl api-resources

https://hub.docker.com/r/mhausenblas/simpleservice/

According to the README on the simpleservice GitHub repo, a number of API endpoints should be available. The issue is that this image and its APIs will be running in a container. That container will be in a Pod with a random IP address, on some Node that also has it's own IP address. However, if we want to cut straight to that Pod, we can.

n the new terminal, create a tunnel from your local machine to your pod.
kubectl port-forward simpleservice 2224:9876 --address=0.0.0.0

n the window that is not running your port forward, try to curl one of 
the simpleservice APIs from your terminal session.
curl http://127.0.0.1:2224/env
curl http://127.0.0.1:2224/health
curl http://127.0.0.1:2224/endpoint0
curl http://127.0.0.1:2224/info
























