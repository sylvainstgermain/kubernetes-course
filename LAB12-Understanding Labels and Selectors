
kubectl config get-contexts
kubectl config use-context kubernetes-the-alta3-way

kubectl get deployments
kubectl delete deployment <INSERT_DEPLOYMENT_NAME_HERE>

Remember, a deployment is a higher-level concept than a "pod". 
A deployment is asking Kubernetes to manage a pods, exposing 
features like "rolling updates", "rollbacks", and "replicas".
 In production, there is no doubt you'll use deployments. 
 However, in testing (or when you're first learning), a more
  basic level on off pod is sufficent


kubectl get pods
kubectl delete pod simpleservice
kubectl get pods

The following command will delete all pods and deployments in the current namespace. 
It is a shortcut for the commands you just ran.

kubectl delete pod,deploy --all

# Create Ngnix
kubectl apply -f https://static.alta3.com/projects/k8s/nginx-pod.yaml

kubectl get pods --show-labels --all-namespaces

# get version all pod of label app
kubectl get pods -L app

NAME      READY     STATUS    RESTARTS   AGE       APP
nginx     1/1       Running   1          1m

Looks like nginx does not have a key for the value app. Let's apply a new label 
to nginx. We'll assign the key app the value of web_service.

 # create label
kubectl label pods nginx app=web_service

# 10.look label 
kubectl get pods -L app

# create yaml
kubectl get pod nginx -o yaml > nginx-pod-update.yaml

vim nginx-pod-update.yaml

...
metadata:
  name: nginx
  labels:
    app: web_service
    importance: critical
    customer: internal_use
...

#Now apply the configuration change to your pod.
kubectl apply -f nginx-pod-update.yaml

#Once again, get the labels on every pod.
kubectl get pods --show-labels --all-namespaces

#Get the label value of all pods with label key app
kubectl get pods -L app









